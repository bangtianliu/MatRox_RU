#!/bin/bash
#SBATCH -A mit162
#SBATCH --job-name="SC_code"
#SBATCH --output="ml.%j.%N.out"
#SBATCH --partition=compute
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=24
#SBATCH --mem=120G
#SBATCH --export=ALL
#SBATCH -t 2:00:00

# all SPD matrix files stored in dense column major format
declare -a filearray=(
#"../../data/covtype100000.points.bin"
"../../data/HIGGS100000.points.bin"
#"../../data/mnist60000.points.bin"
"../../data/SUSY100000.points.bin"
"../../data/letter20000.points.bin"
#"../../data/pen10992.points.bin"
#"../../data/HEPMASS100000.points.bin"
#"../../data/Gas13910.points.bin"
"../../data/grid102400.points.bin"
#"../../data/random65536.points.bin"
#"../../data/dino8w80000.points.bin"
#"../../data/sunflower8w80000.points.bin"
#"../../data/unit32000.points.bin"
)


#array=(54, 28, 780, 18, 16, 16, 28, 129, 2, 2, 3, 2, 2)
array=(28, 18, 16, 2)
dim=(100000, 100000, 20000, 102400)
#dim=(100000, 100000, 60000, 100000, 20000, 10992, 100000, 13910, 102400, 65536, 80000, 80000, 32000)

rm comtest.csv
rm runtest.csv
executable=./sympiler_proj
  i=0
  for filename in "${filearray[@]}"

  do
    d=${array[$i]}
    n=${dim[$i]}
    #budget=${bg[$i]}

   export OMP_NUM_THREADS=12;
  budget=${1}
   echo "#filename=$filename"

  #for j in {1..3}
  #do
   rm *.bin | $executable $filename $n $d $budget | tee -a comtest.csv
   #rm *.bin | $executable $filename $n $d $budget | tee -a comtest.csv
   #rm *.bin | $executable $filename $n $d $budget | tee -a comtest.csv
#   rm *.bin | $executable $filename $n $d 1e-5 | tee -a comtest.csv
#   rm *.bin | $executable $filename $n $d 1e-5 | tee -a comtest.csv

   cd ../matroxTest-V1/

   make

   ./FMatRoxHGEMM $filename $n $d 1e-5 1 | tee -a runtest.csv
   ./FMatRoxHGEMM $filename $n $d 1e-5 1024 | tee -a runtest.csv
   ./FMatRoxHGEMM $filename $n $d 1e-5 2048 | tee -a runtest.csv
   ./FMatRoxHGEMM $filename $n $d 1e-5 4096 | tee -a runtest.csv
  # ./FMatRoxHGEMM $filename $n $d 1e-5 256 | tee -a runtest.csv
  # ./FMatRoxHGEMM $filename $n $d 1e-5 512 | tee -a runtest.csv
  # ./FMatRoxHGEMM $filename $n $d 1e-5 1024 | tee -a runtest.csv
#   ./FMatRoxHGEMM $filename $n $d 1e-5 | tee -a runtest.csv
#
   cd ../sympiler/
 #done
 let i++
  done
  mv ../matroxTest-V1/runtest.csv ./
  awk -F "," '{print $1,$2,$3}' runtest.csv | xargs -n4 -d'\n' > runtest1.csv
  paste comtest.csv runtest1.csv > nrhs.csv
  awk -F ",| " '{$15=$1+$4};{print $15,$3,$2,$5}' OFS=, nrhs.csv > trhs1.csv
  awk -F ",| " '{$15=$1+$7};{print $15,$6,$2,$8}' OFS=, nrhs.csv > trhs1k.csv
  awk -F ",| " '{$15=$1+$10};{print $15,$9,$2,$11}' OFS=, nrhs.csv > trhs2k.csv
  awk -F ",| " '{$15=$1+$13};{print $15,$12,$2,$14}' OFS=, nrhs.csv > trhs4k.csv

declare -a tfilearray=(
"higgs-1"
"susy-1"
"letter-1"
"grid-1"
"higgs-1k"
"susy-1k"
"letter-1k"
"grid-1k"
"higgs-2k"
"susy-2k"
"letter-2k"
"grid-2k"
"higgs-4k"
"susy-4k"
"letter-4k"
"grid-4k"
)

rm data.csv
for filename in "${tfilearray[@]}"
do
  echo "$filename," >> data.csv
done

min=0.0

if [ 1 -eq "$(echo "${budget} > ${min}" | bc)" ]
then
  cat trhs1.csv trhs1k.csv trhs2k.csv trhs4k.csv > trhs.csv
  paste data.csv trhs.csv > h2nrhs.csv
else
  cat trhs1.csv trhs1k.csv trhs2k.csv trhs4k.csv > trhs.csv
  paste data.csv trhs.csv > hssnrhs.csv
fi

rm trhs1.csv
rm trhs1k.csv
rm trhs2k.csv
rm trhs4k.csv
rm trhs.csv
rm data.csv

